@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

#dark-mode {
  --input-color: #3d3d3d;
}

#main-content {
  animation: fade-in 0.6s backwards 0.4s;
}

img[src="img/Light-Mode-Icon.svg"], img[src="img/Dark-Mode-Icon.svg"] {
  position: absolute;
  top: 10px;
  right: 10px;

  border-radius: 50%;
  width: 30px;
  padding: 10px;

  transition: background-color 0.35s;
}

img[src="img/Light-Mode-Icon.svg"]:hover {
  background-color: rgb(235, 235, 235);
}

img[src="img/Dark-Mode-Icon.svg"]:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

@keyframes fade-in {
  0% {
    position: relative;
    top: 50px;
    opacity: 0%;
  }

  100% {
    position: relative;
    top: 0px;
    opacity: 100%;
  }
}

@keyframes pop-up {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes shrink-task {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0);
  }
}

@keyframes shrink-task-list {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0);
  }
}

@keyframes shrink-input-bar {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0);
  }
}

.pop-up {
  animation: pop-up 0.5s;
}

.shrink-task {
  animation: shrink-task 0.5s;
}

.shrink-task-list {
  animation: shrink-task-list 0.5s;
}

.shrink-input-bar {
  animation: shrink-input-bar 0.5s;
}

img[src="img/Light-Mode-Edit-Icon.svg"] {
  border-radius: 5px;
  user-select: none;
  width: 30px;
}

img[src="img/Light-Mode-Edit-Icon.svg"]:hover {
  background-color: rgb(235, 235, 235);
}

img[src="img/Dark-Mode-Edit-Icon.svg"] {
  border-radius: 5px;
  user-select: none;
  width: 30px;
}

img[src="img/Dark-Mode-Edit-Icon.svg"]:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

#light-mode {
  color: #000000;
  background-color: #ffffff;
}

#dark-mode {
  color: #ffffff;
  background-color: #1b1b1b;
}

body {
  font-family: Montserrat;
  margin: 40px 0 47.5px 0;
  font-weight: 450;
}


* {
  transition: background-color 0.35s;
}

.preload, .preload * {
  transition: background-color 0s, text-decoration 0s !important;
}

.bg-transition-none > * {
  transition: background-color 0s;
}

#heading {
  margin: 40px 0;
}

.fade-in {
  animation: fade-in 0.6s;
}

#title {
  display: flex;
  align-items: center;
  justify-content: center;
}

#title h1 {
  font-size: 3rem;
  margin: 0;
}

#date-input {
  display: flex;
  align-items: center;
  column-gap: 20px;
  justify-content: center;
}

#light-mode #date-input input, #light-mode #date-input #plus-button {
  background-color: #e8e8e8;
}

#dark-mode #date-input input, #dark-mode #date-input #plus-button {
  background-color: var(--input-color);
}

#date-input input {
  border: none;
  border-radius: 5px;
  font: inherit;
  padding: 7.5px;
}

#date-input #plus-button {
  display: flex;
  align-items: center;
  justify-content: center;

  aspect-ratio: 1 / 1;
  border-radius: 50%;
  width: 50px;

  transition: background-color 0.35s;
}

#date-input #plus-button::before {
  content: "+";
  font-size: 2em;
  font-weight: 200;
}

#light-mode #date-input #plus-button:hover {
  background-color: rgb(239, 239, 239);
}

#dark-mode #date-input #plus-button:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

#light-mode .error {
  color: #FF0000;
}

#dark-mode .error {
  color: #ffb09c;
} 

.error {
  font-size: 0.7em;
}

.error img {
  width: 15px;
  margin-right: 2px;
  user-select: none;
}

#heading .error {
  display: flex;
  justify-content: center;

  margin-top: 6px;
}

.light-mode-highlight {
  animation: light-mode-highlight 0.8s;
}

.dark-mode-highlight {
  animation: dark-mode-highlight 0.8s;
}

#heading .error span, .input-bar .error span {
  display: inline-flex;
  align-items: center;

  border-radius: 10px;
  padding: 3px 5px 3px 3px;
}

@keyframes dark-mode-highlight {
  0% {
    background-color: rgba(255, 255, 255, 0);
  }

  50% {
    background-color: rgba(255, 255, 255, 0.2);
  }

  100% {
    background-color: rgba(255, 255, 255, 0);
  }
}

@keyframes light-mode-highlight {
  0% {
    background-color: rgb(236, 236, 236, 0);
  }

  50% {
    background-color: rgba(236, 236, 236, 1);
  }

  100% {
    background-color: rgba(236, 236, 236, 0);
  }
}

#light-mode .task-list-container {
  background-color: #f8f8f8;
}

#dark-mode .task-list-container {
  background-color: #252526;
}

.task-list-container {
  border-radius: 7px;
  margin: 15px auto;
  padding: 15px;
  scroll-margin-bottom: 75px;
  width: min(60%, 700px);
}

.task-list-container > *:last-child {
  margin-bottom: 4px;
}

.task-list-heading {
  display: grid;
  grid-template-columns: minmax(0, 1fr) 30px 30px;
  column-gap: 5px;

  margin-bottom: 15px;
}

.task-list-heading h2 {
  display: grid;
  align-items: center;

  font-weight: 650;
  margin: 0 0 0 5px;
}

.remove-button {
  position: relative;
}

.remove-button::before {
  transform: rotate(45deg);
}

.remove-button::after {
  transform: rotate(-45deg);
}

.task-list-heading .remove-button {
  border-radius: 5px;
  height: 30px;
  opacity: 100%;
  width: 30px;
}

#light-mode .task-list-heading .remove-button::before,
#light-mode .task-list-heading .remove-button::after {
  background-color: #000000;
}

#dark-mode .task-list-heading .remove-button::before,
#dark-mode .task-list-heading .remove-button::after {
  background-color: #ffffff;
}

.task-list-heading .remove-button::before, .task-list-heading .remove-button::after {
  position: absolute;
  left: 14.5px;
  top: 2px;

  content: "";
  height: 25px;
  width: 1.9px;
}

.task-list-heading .remove-button:active {
  opacity: 100%;
}

#light-mode .task-list-heading .remove-button:hover {
  background-color: rgb(235, 235, 235);
}

#dark-mode .task-list-heading .remove-button:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.input-bar {
  display: grid;
  column-gap: 7.5px;
  grid-template-columns: repeat(2, minmax(0, 2fr)) minmax(0, 1fr);
  margin: 15px 0 10px 0;
}

.hidden {
  display: none;
}

#light-mode .input-bar > *:nth-child(-n + 3) {
  background-color: #e8e8e8;
}

#dark-mode .input-bar > *:nth-child(-n + 3) {
  background-color: var(--input-color);
}

.input-bar > *:nth-child(-n + 3) {
  border: none;
  border-radius: 5px;
  font: inherit;
  padding: 10px;
}

#light-mode input {
  color: #000000;
}

#dark-mode input {
  color: #ffffff;
}

input:focus {
  outline: none;
}

#light-mode input::placeholder, input[type="date"]:invalid, button {
  color: rgb(0, 0, 0, 0.6);
}

#dark-mode input::placeholder, #dark-mode input[type="date"]:invalid, 
#dark-mode button {
  color: rgb(255, 255, 255, 0.6);
}

.input-bar .error {
  display: flex;
  align-items: center;

  grid-area: 2 / 1 / 3 / 4;

  margin: 6px 0 0 2px;
}

.task-container {
  display: grid;
  grid-template-columns: minmax(0, 1fr) 35px;

  /* animation: pop-up 0.5s; */

  border-radius: 7px;
  margin: 7.5px 0;
}

#light-mode .task-container:nth-of-type(odd) {
  background-color: rgb(228, 228, 228);
}

#light-mode .task-container:nth-of-type(even) {
  background-color: #f0f0f0;
}

#dark-mode .task-container:nth-of-type(odd) {
  background-color: rgba(255, 255, 255, 0.1);
}

#dark-mode .task-container:nth-of-type(even) {
  background-color: rgba(255, 255, 255, 0.175);
}

.task-container > * {
  padding: 10px;
}

.task-container > div:nth-child(1) {
  font: inherit;
  word-break: break-word;
}

.task-container > div:nth-child(2) {
  display: flex;
  align-items: center;
}

.time {
  font-size: 0.7em;
  margin-bottom: 3px;
  opacity: 75%;
}

.task {
  display: inline-flex;
  align-items: start;

  position: relative;

  line-height: 1.2em;
}

.task input[type="checkbox"] {
  flex: 0 0 auto;
}

#light-mode input[type="checkbox"] {
  background-color: white;
  border: 2px solid #808080;
}

#dark-mode input[type="checkbox"] {
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid #808080;
}

input[type="checkbox"] {
  appearance: none;

  height: 15px;
  width: 15px;
  border-radius: 3px;

  margin: 2px 7px 0 0;
}

#light-mode input[type="checkbox"]:checked {
  background-color: #0099ff;
  border: none;
}

#dark-mode input[type="checkbox"]:checked {
  background-color: #ffffff;
  border: none;
}

#light-mode .checkmark {
  border: solid white;
  border-width: 0 2px 2px 0;
}

#dark-mode .checkmark {
  border: solid #000000;
  border-width: 0 2px 2px 0;
}

.checkmark {
  position: absolute;
  top: 3px;
  left: 4.5px;

  height: 9px;
  width: 4px;
}

.checkmark {
  display: none;

  content: "";
  pointer-events: none;
  transform: rotate(45deg);
}

.checkmark:has(+ input:checked) {
  display: block;
}

#light-mode .task:has(> input[type="checkbox"]:checked) {
  color: rgba(0, 0, 0, 0.5);
}

#dark-mode .task:has(> input[type="checkbox"]:checked) {
  color: rgba(255, 255, 255, 0.5);
}

.task:has(> input[type="checkbox"]:checked) {
  color: rgba(255, 255, 255, 0.5);
  text-decoration-color: rgba(255, 255, 255, 0.5);
  text-decoration: line-through;
}

.task-container .remove-button {
  height: 15px;
  width: 15px;

  opacity: 70%;
}

#light-mode .task-container .remove-button::before, 
#light-mode .task-container .remove-button::after {
  background-color: #000000;
}

.task-container .remove-button::before, .task-container .remove-button::after {
  position: absolute;
  left: 7px;
  top: 2.5px;

  background-color: #ffffff;
  content: "";
  height: 10px;
  width: 1px;
}

.task-container .remove-button:hover {
  opacity: 100%;
}

@media screen and (max-width: 1100px) {
  #input-bar, .task-list-container {
    width: 75%;
  }
}

@media screen and (max-width: 850px) {
  #input-bar, .task-list-container {
    width: 85%;
  }
}

@media screen and (max-width: 600px) {
  body {
    font-size: 0.9em;
  }

  #input-bar, .task-list-container {
    padding: 10px;
  }

  h2 {
    margin-bottom: 5px; 
  }

  input[type="checkbox"] {
    margin: 1px 5px 0 0;
  }
}

@media screen and (max-width: 420px) {
  body {
    font-size: 0.65em;
  }

  h2 {
    font-size: 1.7em;
    margin-bottom: 2.5px; 
  }

  input[type="checkbox"] {
    height: 10px;
    width: 10px;
    margin: 1.5px 3px 0 0;
  }
}
